
state 0:

	program : . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 17
	program	goto 155
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 1:

	exp : valExp .  (reduce by rule 1)



	.	reduce by rule 1


state 2:

	blockExp : letExp .  (reduce by rule 51)



	.	reduce by rule 51


state 3:

	blockExp : forExp .  (reduce by rule 50)



	.	reduce by rule 50


state 4:

	blockExp : whileExp .  (reduce by rule 49)



	.	reduce by rule 49


state 5:

	blockExp : condExp .  (reduce by rule 48)



	.	reduce by rule 48


state 6:

	exp : blockExp .  (reduce by rule 8)



	.	reduce by rule 8


state 7:

	exp : seq .  (reduce by rule 3)



	.	reduce by rule 3


state 8:

	exp : assignExp .  (reduce by rule 7)



	.	reduce by rule 7


state 9:

	exp : arrayCreation .  (reduce by rule 6)



	.	reduce by rule 6


state 10:

	exp : recordCreation .  (reduce by rule 5)



	.	reduce by rule 5


state 11:

	exp : funcCall .  (reduce by rule 9)



	.	reduce by rule 9


state 12:

	calcExp : booleanExp .  (reduce by rule 61)



	.	reduce by rule 61


state 13:

	calcExp : compareExp .  (reduce by rule 60)



	.	reduce by rule 60


state 14:

	calcExp : arithExp .  (reduce by rule 59)



	.	reduce by rule 59


state 15:

	exp : calcExp .  (reduce by rule 4)



	.	reduce by rule 4


state 16:

	exp : lvalue .  (reduce by rule 2)
	assignExp : lvalue . ASSIGN exp 

	ASSIGN	shift 29


	.	reduce by rule 2


state 17:

	program : exp .  (reduce by rule 0)
	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 0


state 18:

	valExp : NIL .  (reduce by rule 46)



	.	reduce by rule 46


state 19:

	blockExp : BREAK .  (reduce by rule 52)



	.	reduce by rule 52


state 20:

	letExp : LET . decs IN END 
	letExp : LET . decs IN expSeq END 

	FUNCTION	shift 49
	VAR	shift 48
	TYPE	shift 47

	fundec	goto 46
	decs	goto 45
	dec	goto 44
	tydec	goto 43
	vardec	goto 42

	.	reduce by rule 17


state 21:

	forExp : FOR . ID ASSIGN exp TO exp DO exp 

	ID	shift 50


	.	error


state 22:

	whileExp : WHILE . exp DO exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 51
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 23:

	condExp : IF . exp THEN exp 
	condExp : IF . exp THEN exp ELSE exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 52
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 24:

	arithExp : MINUS . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 53
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 25:

	seq : LPAREN . expSeq RPAREN 
	valExp : LPAREN . RPAREN 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	RPAREN	shift 56
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	expSeq	goto 55
	exp	goto 54
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 26:

	valExp : STRING .  (reduce by rule 45)



	.	reduce by rule 45


state 27:

	valExp : INT .  (reduce by rule 44)



	.	reduce by rule 44


state 28:

	lvalue : ID . lvalueTail 
	funcCall : ID . LPAREN RPAREN 
	funcCall : ID . LPAREN funcArgs RPAREN 
	recordCreation : ID . LBRACE RBRACE 
	recordCreation : ID . LBRACE recordField RBRACE 
	arrayCreation : ID . LBRACK exp RBRACK OF exp 

	LPAREN	shift 61
	LBRACK	shift 60
	LBRACE	shift 59
	DOT	shift 58

	lvalueTail	goto 57

	.	reduce by rule 41


state 29:

	assignExp : lvalue ASSIGN . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 62
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 30:

	booleanExp : exp OR . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 63
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 31:

	booleanExp : exp AND . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 64
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 32:

	compareExp : exp GE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 65
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 33:

	compareExp : exp GT . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 66
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 34:

	compareExp : exp LE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 67
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 35:

	compareExp : exp LT . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 68
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 36:

	compareExp : exp NEQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 69
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 37:

	compareExp : exp EQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 70
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 38:

	arithExp : exp DIVIDE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 71
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 39:

	arithExp : exp TIMES . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 72
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 40:

	arithExp : exp MINUS . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 73
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 41:

	arithExp : exp PLUS . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 74
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 42:

	dec : vardec .  (reduce by rule 19)



	.	reduce by rule 19


state 43:

	dec : tydec .  (reduce by rule 20)



	.	reduce by rule 20


state 44:

	decs : dec . decs 

	FUNCTION	shift 49
	VAR	shift 48
	TYPE	shift 47

	fundec	goto 46
	decs	goto 75
	dec	goto 44
	tydec	goto 43
	vardec	goto 42

	.	reduce by rule 17


state 45:

	letExp : LET decs . IN END 
	letExp : LET decs . IN expSeq END 

	IN	shift 76


	.	error


state 46:

	dec : fundec .  (reduce by rule 21)



	.	reduce by rule 21


state 47:

	tydec : TYPE . ID EQ ty 

	ID	shift 77


	.	error


state 48:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 78


	.	error


state 49:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 79


	.	error


state 50:

	forExp : FOR ID . ASSIGN exp TO exp DO exp 

	ASSIGN	shift 80


	.	error


state 51:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	whileExp : WHILE exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 81


	.	error


state 52:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	condExp : IF exp . THEN exp 
	condExp : IF exp . THEN exp ELSE exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	THEN	shift 82


	.	error


state 53:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	arithExp : MINUS exp .  (reduce by rule 66)
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 



	.	reduce by rule 66


state 54:

	expSeq : exp .  (reduce by rule 10)
	expSeq : exp . SEMICOLON expSeq 
	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	SEMICOLON	shift 83
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 10


state 55:

	seq : LPAREN expSeq . RPAREN 

	RPAREN	shift 84


	.	error


state 56:

	valExp : LPAREN RPAREN .  (reduce by rule 47)



	.	reduce by rule 47


state 57:

	lvalue : ID lvalueTail .  (reduce by rule 40)



	.	reduce by rule 40


state 58:

	lvalueTail : DOT . ID lvalueTail 

	ID	shift 85


	.	error


state 59:

	recordCreation : ID LBRACE . RBRACE 
	recordCreation : ID LBRACE . recordField RBRACE 

	ID	shift 88
	RBRACE	shift 87

	recordField	goto 86

	.	error


state 60:

	lvalueTail : LBRACK . exp RBRACK lvalueTail 
	arrayCreation : ID LBRACK . exp RBRACK OF exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 89
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 61:

	funcCall : ID LPAREN . RPAREN 
	funcCall : ID LPAREN . funcArgs RPAREN 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	RPAREN	shift 92
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 91
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	funcArgs	goto 90
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 62:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	assignExp : lvalue ASSIGN exp .  (reduce by rule 39)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 39


state 63:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	booleanExp : exp OR exp .  (reduce by rule 74)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31


	.	reduce by rule 74


state 64:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp AND exp .  (reduce by rule 73)
	booleanExp : exp . OR exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32


	.	reduce by rule 73


state 65:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp GE exp .  (reduce by rule 71)
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	EOF	reduce by rule 71
	COMMA	reduce by rule 71
	SEMICOLON	reduce by rule 71
	RPAREN	reduce by rule 71
	RBRACK	reduce by rule 71
	RBRACE	reduce by rule 71
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 71
	OR	reduce by rule 71
	THEN	reduce by rule 71
	ELSE	reduce by rule 71
	TO	reduce by rule 71
	DO	reduce by rule 71
	IN	reduce by rule 71
	END	reduce by rule 71
	FUNCTION	reduce by rule 71
	VAR	reduce by rule 71
	TYPE	reduce by rule 71


	.	error


state 66:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp GT exp .  (reduce by rule 69)
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	EOF	reduce by rule 69
	COMMA	reduce by rule 69
	SEMICOLON	reduce by rule 69
	RPAREN	reduce by rule 69
	RBRACK	reduce by rule 69
	RBRACE	reduce by rule 69
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 69
	OR	reduce by rule 69
	THEN	reduce by rule 69
	ELSE	reduce by rule 69
	TO	reduce by rule 69
	DO	reduce by rule 69
	IN	reduce by rule 69
	END	reduce by rule 69
	FUNCTION	reduce by rule 69
	VAR	reduce by rule 69
	TYPE	reduce by rule 69


	.	error


state 67:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	compareExp : exp LE exp .  (reduce by rule 72)
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	EOF	reduce by rule 72
	COMMA	reduce by rule 72
	SEMICOLON	reduce by rule 72
	RPAREN	reduce by rule 72
	RBRACK	reduce by rule 72
	RBRACE	reduce by rule 72
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 72
	OR	reduce by rule 72
	THEN	reduce by rule 72
	ELSE	reduce by rule 72
	TO	reduce by rule 72
	DO	reduce by rule 72
	IN	reduce by rule 72
	END	reduce by rule 72
	FUNCTION	reduce by rule 72
	VAR	reduce by rule 72
	TYPE	reduce by rule 72


	.	error


state 68:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp LT exp .  (reduce by rule 70)
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	EOF	reduce by rule 70
	COMMA	reduce by rule 70
	SEMICOLON	reduce by rule 70
	RPAREN	reduce by rule 70
	RBRACK	reduce by rule 70
	RBRACE	reduce by rule 70
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 70
	OR	reduce by rule 70
	THEN	reduce by rule 70
	ELSE	reduce by rule 70
	TO	reduce by rule 70
	DO	reduce by rule 70
	IN	reduce by rule 70
	END	reduce by rule 70
	FUNCTION	reduce by rule 70
	VAR	reduce by rule 70
	TYPE	reduce by rule 70


	.	error


state 69:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp NEQ exp .  (reduce by rule 68)
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	EOF	reduce by rule 68
	COMMA	reduce by rule 68
	SEMICOLON	reduce by rule 68
	RPAREN	reduce by rule 68
	RBRACK	reduce by rule 68
	RBRACE	reduce by rule 68
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 68
	OR	reduce by rule 68
	THEN	reduce by rule 68
	ELSE	reduce by rule 68
	TO	reduce by rule 68
	DO	reduce by rule 68
	IN	reduce by rule 68
	END	reduce by rule 68
	FUNCTION	reduce by rule 68
	VAR	reduce by rule 68
	TYPE	reduce by rule 68


	.	error


state 70:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp EQ exp .  (reduce by rule 67)
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	EOF	reduce by rule 67
	COMMA	reduce by rule 67
	SEMICOLON	reduce by rule 67
	RPAREN	reduce by rule 67
	RBRACK	reduce by rule 67
	RBRACE	reduce by rule 67
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	AND	reduce by rule 67
	OR	reduce by rule 67
	THEN	reduce by rule 67
	ELSE	reduce by rule 67
	TO	reduce by rule 67
	DO	reduce by rule 67
	IN	reduce by rule 67
	END	reduce by rule 67
	FUNCTION	reduce by rule 67
	VAR	reduce by rule 67
	TYPE	reduce by rule 67


	.	error


state 71:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	arithExp : exp DIVIDE exp .  (reduce by rule 65)
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 



	.	reduce by rule 65


state 72:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp TIMES exp .  (reduce by rule 64)
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 



	.	reduce by rule 64


state 73:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp MINUS exp .  (reduce by rule 63)
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	TIMES	shift 39
	DIVIDE	shift 38


	.	reduce by rule 63


state 74:

	arithExp : exp . PLUS exp 
	arithExp : exp PLUS exp .  (reduce by rule 62)
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	TIMES	shift 39
	DIVIDE	shift 38


	.	reduce by rule 62


state 75:

	decs : dec decs .  (reduce by rule 18)



	.	reduce by rule 18


state 76:

	letExp : LET decs IN . END 
	letExp : LET decs IN . expSeq END 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	END	shift 94
	BREAK	shift 19
	NIL	shift 18

	expSeq	goto 93
	exp	goto 54
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 77:

	tydec : TYPE ID . EQ ty 

	EQ	shift 95


	.	error


state 78:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 97
	ASSIGN	shift 96


	.	error


state 79:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 98


	.	error


state 80:

	forExp : FOR ID ASSIGN . exp TO exp DO exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 99
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 81:

	whileExp : WHILE exp DO . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 100
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 82:

	condExp : IF exp THEN . exp 
	condExp : IF exp THEN . exp ELSE exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 101
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 83:

	expSeq : exp SEMICOLON . expSeq 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	expSeq	goto 102
	exp	goto 54
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 84:

	seq : LPAREN expSeq RPAREN .  (reduce by rule 12)



	.	reduce by rule 12


state 85:

	lvalueTail : DOT ID . lvalueTail 

	LBRACK	shift 104
	DOT	shift 58

	lvalueTail	goto 103

	.	reduce by rule 41


state 86:

	recordCreation : ID LBRACE recordField . RBRACE 

	RBRACE	shift 105


	.	error


state 87:

	recordCreation : ID LBRACE RBRACE .  (reduce by rule 36)



	.	reduce by rule 36


state 88:

	recordField : ID . EQ exp 
	recordField : ID . EQ exp COMMA recordField 

	EQ	shift 106


	.	error


state 89:

	lvalueTail : LBRACK exp . RBRACK lvalueTail 
	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	arrayCreation : ID LBRACK exp . RBRACK OF exp 

	RBRACK	shift 107
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 90:

	funcCall : ID LPAREN funcArgs . RPAREN 

	RPAREN	shift 108


	.	error


state 91:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	funcArgs : exp .  (reduce by rule 13)
	funcArgs : exp . COMMA funcArgs 

	COMMA	shift 109
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 13


state 92:

	funcCall : ID LPAREN RPAREN .  (reduce by rule 15)



	.	reduce by rule 15


state 93:

	letExp : LET decs IN expSeq . END 

	END	shift 110


	.	error


state 94:

	letExp : LET decs IN END .  (reduce by rule 57)



	.	reduce by rule 57


state 95:

	tydec : TYPE ID EQ . ty 

	ID	shift 114
	LBRACE	shift 113
	ARRAY	shift 112

	ty	goto 111

	.	error


state 96:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 115
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 97:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 116


	.	error


state 98:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 118

	tyfields	goto 117

	.	reduce by rule 26


state 99:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	forExp : FOR ID ASSIGN exp . TO exp DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	TO	shift 119


	.	error


state 100:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	whileExp : WHILE exp DO exp .  (reduce by rule 55)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 55


state 101:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	condExp : IF exp THEN exp .  (reduce by rule 53)
	condExp : IF exp THEN exp . ELSE exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	ELSE	shift 120


	.	reduce by rule 53


state 102:

	expSeq : exp SEMICOLON expSeq .  (reduce by rule 11)



	.	reduce by rule 11


state 103:

	lvalueTail : DOT ID lvalueTail .  (reduce by rule 42)



	.	reduce by rule 42


state 104:

	lvalueTail : LBRACK . exp RBRACK lvalueTail 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 121
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 105:

	recordCreation : ID LBRACE recordField RBRACE .  (reduce by rule 37)



	.	reduce by rule 37


state 106:

	recordField : ID EQ . exp 
	recordField : ID EQ . exp COMMA recordField 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 122
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 107:

	lvalueTail : LBRACK exp RBRACK . lvalueTail 
	arrayCreation : ID LBRACK exp RBRACK . OF exp 

	LBRACK	shift 104
	DOT	shift 58
	OF	shift 124

	lvalueTail	goto 123

	.	reduce by rule 41


state 108:

	funcCall : ID LPAREN funcArgs RPAREN .  (reduce by rule 16)



	.	reduce by rule 16


state 109:

	funcArgs : exp COMMA . funcArgs 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 91
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	funcArgs	goto 125
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 110:

	letExp : LET decs IN expSeq END .  (reduce by rule 58)



	.	reduce by rule 58


state 111:

	tydec : TYPE ID EQ ty .  (reduce by rule 22)



	.	reduce by rule 22


state 112:

	ty : ARRAY . OF ID 

	OF	shift 126


	.	error


state 113:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 118

	tyfields	goto 127

	.	reduce by rule 26


state 114:

	ty : ID .  (reduce by rule 23)



	.	reduce by rule 23


state 115:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	vardec : VAR ID ASSIGN exp .  (reduce by rule 30)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 30


state 116:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 128


	.	error


state 117:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 129


	.	error


state 118:

	tyfields : ID . COLON ID tyfieldLeft 

	COLON	shift 130


	.	error


state 119:

	forExp : FOR ID ASSIGN exp TO . exp DO exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 131
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 120:

	condExp : IF exp THEN exp ELSE . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 132
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 121:

	lvalueTail : LBRACK exp . RBRACK lvalueTail 
	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 

	RBRACK	shift 133
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	error


state 122:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	recordField : ID EQ exp .  (reduce by rule 34)
	recordField : ID EQ exp . COMMA recordField 

	COMMA	shift 134
	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 34


state 123:

	lvalueTail : LBRACK exp RBRACK lvalueTail .  (reduce by rule 43)



	.	reduce by rule 43


state 124:

	arrayCreation : ID LBRACK exp RBRACK OF . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 135
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 125:

	funcArgs : exp COMMA funcArgs .  (reduce by rule 14)



	.	reduce by rule 14


state 126:

	ty : ARRAY OF . ID 

	ID	shift 136


	.	error


state 127:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 137


	.	error


state 128:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 138
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 129:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 140
	EQ	shift 139


	.	error


state 130:

	tyfields : ID COLON . ID tyfieldLeft 

	ID	shift 141


	.	error


state 131:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp . DO exp 

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30
	DO	shift 142


	.	error


state 132:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	condExp : IF exp THEN exp ELSE exp .  (reduce by rule 54)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 54


state 133:

	lvalueTail : LBRACK exp RBRACK . lvalueTail 

	LBRACK	shift 104
	DOT	shift 58

	lvalueTail	goto 123

	.	reduce by rule 41


state 134:

	recordField : ID EQ exp COMMA . recordField 

	ID	shift 88

	recordField	goto 143

	.	error


state 135:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	arrayCreation : ID LBRACK exp RBRACK OF exp .  (reduce by rule 38)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 38


state 136:

	ty : ARRAY OF ID .  (reduce by rule 25)



	.	reduce by rule 25


state 137:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 24)



	.	reduce by rule 24


state 138:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 31)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 31


state 139:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 144
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 140:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 145


	.	error


state 141:

	tyfields : ID COLON ID . tyfieldLeft 

	COMMA	shift 147

	tyfieldLeft	goto 146

	.	reduce by rule 28


state 142:

	forExp : FOR ID ASSIGN exp TO exp DO . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 148
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 143:

	recordField : ID EQ exp COMMA recordField .  (reduce by rule 35)



	.	reduce by rule 35


state 144:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 32)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 32


state 145:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 149


	.	error


state 146:

	tyfields : ID COLON ID tyfieldLeft .  (reduce by rule 27)



	.	reduce by rule 27


state 147:

	tyfieldLeft : COMMA . ID COLON ID tyfieldLeft 

	ID	shift 150


	.	error


state 148:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	forExp : FOR ID ASSIGN exp TO exp DO exp .  (reduce by rule 56)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 56


state 149:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 28
	INT	shift 27
	STRING	shift 26
	LPAREN	shift 25
	MINUS	shift 24
	IF	shift 23
	WHILE	shift 22
	FOR	shift 21
	LET	shift 20
	BREAK	shift 19
	NIL	shift 18

	exp	goto 151
	lvalue	goto 16
	calcExp	goto 15
	arithExp	goto 14
	compareExp	goto 13
	booleanExp	goto 12
	funcCall	goto 11
	recordCreation	goto 10
	arrayCreation	goto 9
	assignExp	goto 8
	seq	goto 7
	blockExp	goto 6
	condExp	goto 5
	whileExp	goto 4
	forExp	goto 3
	letExp	goto 2
	valExp	goto 1

	.	error


state 150:

	tyfieldLeft : COMMA ID . COLON ID tyfieldLeft 

	COLON	shift 152


	.	error


state 151:

	arithExp : exp . PLUS exp 
	arithExp : exp . MINUS exp 
	arithExp : exp . TIMES exp 
	arithExp : exp . DIVIDE exp 
	compareExp : exp . EQ exp 
	compareExp : exp . NEQ exp 
	compareExp : exp . GT exp 
	compareExp : exp . LT exp 
	compareExp : exp . GE exp 
	compareExp : exp . LE exp 
	booleanExp : exp . AND exp 
	booleanExp : exp . OR exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 33)

	PLUS	shift 41
	MINUS	shift 40
	TIMES	shift 39
	DIVIDE	shift 38
	EQ	shift 37
	NEQ	shift 36
	LT	shift 35
	LE	shift 34
	GT	shift 33
	GE	shift 32
	AND	shift 31
	OR	shift 30


	.	reduce by rule 33


state 152:

	tyfieldLeft : COMMA ID COLON . ID tyfieldLeft 

	ID	shift 153


	.	error


state 153:

	tyfieldLeft : COMMA ID COLON ID . tyfieldLeft 

	COMMA	shift 147

	tyfieldLeft	goto 154

	.	reduce by rule 28


state 154:

	tyfieldLeft : COMMA ID COLON ID tyfieldLeft .  (reduce by rule 29)



	.	reduce by rule 29


state 155:


	EOF	accept


	.	error

501 of 1016 action table entries left after compaction
639 goto table entries
